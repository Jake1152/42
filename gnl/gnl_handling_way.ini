gnl 처리

- fd를 넘겨받아서 
  버퍼사이즈만큼 읽고
  개행 단위로 반환한다.
  개행이 없으면 static에 담고
  다 읽었는데도 static에 남은 부분에 개행이 없으면 NULL을 return한다.
  read를 실패해도 NULL을 return한다.

- 어떻게 하면 깔끔할것인가?
- 어떤 동작들은 필수인가?
    - 개행을 찾는 동작
    - 개행을 찾고 찾은 것을 반환하기 위해 
      별도 변수에 동적할당을 하고 담는 공간
    - 개행 이후에 데이터가 있다면
      static에 저장하는 부분

- 갈릴 수 있는 부분
    - 개행을 어디서 찾고 return할것인가?
        - 1 
            read에서 찾는다.
            개행이 있으면 있는 부분까지는 return
            개행 이후 부분이나 (개행이 없었다면 전체를) static에 저장
        - 2 
            일단 read한 것을 static에 다 저장한다.
            static에서 개행을 찾아서 처리한다.
            함수 길이 제한(25줄)으로 인해
            static에서 개행 있는 문자열까지 찾아서 return하는 것은 별도로 처리해야한다.
            그 과정은
            - 파라미터로 static으로 저장한 변수를 넘긴다.
            - 그 변수이름을 save라고 할떄
              - save에서 개행을 찾는다.
                - 못찾으면 NULL return
                - 찾았으면
                  - 개행있는 부분까지 새로운 변수에 저장한다.
                  (새로운 변수에 개행있는 부분까지 크기만큼 동적할당 이후 해당 부분 복사)
                  - 개행 이후 부분있다면
                    - save에 개행 이후 부분을 동적할당
                      이 과정을 진행할때 개행 이후부분을 별도 변수에 임시로 저장하며
                      - save를 free한다
                        - !!! 이때 호출된  static이 가리키던 공간이 free되어야한다.
                        - 그래서 호출할때 double pointer를 사용하여 호출된 함수에서 조작할 수 있도록 한다.
                        - 
                    - 없다면
                      - strdup("")을 해준다.
            - 예외사항
              - read로 다 읽었고 static에 데이터들이 있지만 개행이 없는경우
                남은 것들만 return해줘야한다.


----
충돌하는 논리
- way1
    - static에서 개행 찾아서 return
    - static에 개행이 없다면    
        - read 진행
    - read도 비었고 static에도 개행이 없다면
        break
        - 이 부분이 문제
        - read에서 ERROR가 오는 경우 바로   null return
    - while문 밖에는
        read에서 Error 나는 경우 처리
        별도로 처리해야하나?
        - null
        - ㅜㅕ

- way2
    -


- 동작별로 쪼개는 것의 중요 
    - 어떤게 최소 단위인지 잘 생각해보아야한다.
    - 어떻게해야 중복을 줄일 수 있는가?
    - 어떤게 형태소 같은 동작을 하는가?


          
- 